/**
* Copyright 2008 Peter Vennemann
* 
* This file is part of JPIV.
*
* JPIV is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, either version 3 of the License, or
* (at your option) any later version.
*
* JPIV is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with JPIV.  If not, see <http://www.gnu.org/licenses/>. 
*/

addRandomNoise() {

	// global variables
	jpiv2.ScriptDlg myDlg;
	double maxNoise;
		
	// initialize graphical user dialog
	private void initDlg() {
		myDlg = new jpiv2.ScriptDlg(jpiv,
			"Add random noise",
			"mail@vennemann-online.de");
		myDlg.setDate("March 2007");
		myDlg.setOs("independent");
		myDlg.setDependencies("none");
		myDlg.setComment(
			"Adds the product of a random number (-1 < random " +
			"number < 1) and maxNoise to the values of the third " +
			"and fourth column.");
		myDlg.addVariable("maxNoise", "0.1", "maximum noise");
	}
	
	// initialize variables
	private void initVariables() {
		maxNoise = myDlg.getAsDouble("maxNoise");
	}
	
	// show a file chooser dialog for the output filename
	// return: a filename
	private String showFileChooser() {
		jpiv2.FlexFileChooser myFileChooser = jpiv.getFlexFileChooser();
		myFileChooser.setFiletype(myFileChooser.ALL, false);
		int approve = myFileChooser.showSaveDialog(jpiv);
		if (approve == javax.swing.JFileChooser.APPROVE_OPTION) {
			String pathname = myFileChooser.getSelectedFile().toString();
			// remove any extension
			int index = pathname.lastIndexOf('.');
			if(index != -1) pathname = pathname.substring(0, index);
			return(pathname);
		} else {
			System.out.println("No destination file specified.");
			return(null);
		}
	}
	
	// main function
	private void run() {
		initDlg();
		int proceed = myDlg.display();
		if (proceed == myDlg.EXECUTE_OPTION) {
			initVariables();
			String destPath = showFileChooser();
			if (destPath != null) {
				String[] files = jpiv.getListFrame().getSelectedElements();
				if ( files == null) {
					System.out.println("Select at least one vector file.");
				} else {
					java.text.DecimalFormat df = 
					jpiv2.FileHandling.getCounterFormat(files.length);
					for(int f=0; f<files.length; f++) {
						jpiv2.PivData theData = new jpiv2.PivData(files[f]);
						theData.addRandomNoise(maxNoise);
						theData.writeDataToFile(destPath + df.format(f) + ".jvc", true);
						jpiv.getListFrame().appendElement(destPath + df.format(f) + ".jvc");
					}
				}
			}
		}
		else {
			System.out.println("cancelled.");
		}
	}
	
	return this;
}

// start batch filter process in background and clean up variables
addRandomNoise = addRandomNoise();
new Thread( addRandomNoise ).start();
jpiv.getCmdInterpreter().clearBshNamespace();

